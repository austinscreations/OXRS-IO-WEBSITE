import{d as a,o as s,c as i,a as e,e as o,h as l,F as c,f as h,g as t}from"./app.b38cdf7f.js";import{_ as d}from"./plugin-vue_export-helper.21dcd24c.js";var u="/images/oxrs-rack32.jpg";const p={},_=h('<h1 id="rack32" tabindex="-1"><a class="header-anchor" href="#rack32" aria-hidden="true">#</a> Rack32</h1><p class="maker">by <b>SuperHouse Automation</b></p><blockquote><p>SKU: OXRS-SHA-RACK32</p></blockquote><p><img src="'+u+'" alt="SuperHouse Automation Rack32 ESP32 control board"></p><p>A general purpose control board for rack mount projects.</p><p>DIY rack-mount projects often require an Ethernet connection, a status display, power regulation, and other features that are not specific to the project.</p><p>This board fits into a rack-mount case and provides those common features so they don&#39;t have to be recreated every time.</p><h2 id="features" tabindex="-1"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h2><ul><li><strong>ESP32</strong> microcontroller with <strong>WiFi</strong>.</li><li><strong>10/100Mbps</strong> Ethernet.</li><li>Support for both DIY (12V) PoE and <strong>802.3af PoE</strong>.</li><li>Pluggable terminal block for optional external DC power input.</li><li>Automotive-grade voltage regulator for harsh electrical environments.</li><li>6-way IDC &quot;I2C-Breakout&quot; header for linking to other boards.</li><li>8-way IDC &quot;SPI-LCD&quot; header for connection to an LCD.</li><li><strong>USB-C</strong> connector for loading firmware.</li><li>Auto power source selection between USB-C, PoE, and external DC.</li><li>I/O header with power, 2 x I2C ports, and second hardware serial port.</li><li>Micro SD card slot for config files, logs, and media storage.</li><li>Onboard <strong>temperature sensor</strong>.</li><li>Header for front-panel power LED.</li><li>Can be built with onboard PCB antenna or external WiFi antenna.</li></ul><div class="custom-container danger"><p class="custom-container-title">PoE Bypass Jumpers</p><p>The PoE bypass jumper headers are &#39;Red&#39; for a reason. <strong>DO NOT</strong> insert these jumpers if you are intending to power the Rack32 via <strong>802.3af PoE</strong>. ONLY insert them if you intend using DIY (12V) PoE, otherwise you will apply 48VDC from the <strong>802.3af PoE</strong> source to the L78S05CV linear 5V regulator (25VDC max input voltage) and destroy it.</p></div><div class="custom-container danger"><p class="custom-container-title">External I2C Hardware</p><p><strong>DO NOT</strong> connect any external supported hardware to the &#39;I2CBreakout&#39; socket while the Rack32 is powered up as this will likely cause a failure of the AP2112K LDO 3.3V regulator or the ESP32 itself. <strong>ONLY connect external supported hardware to the &#39;I2CBreakout&#39; socket when the Rack32 is powered down.</strong></p></div><h2 id="supported-firmware" tabindex="-1"><a class="header-anchor" href="#supported-firmware" aria-hidden="true">#</a> Supported Firmware</h2>',12),f=t("OXRS-SHA-SmokeDetector-ESP32-FW "),m={href:"https://github.com/SuperHouse/OXRS-SHA-SmokeDetector-ESP32-FW",target:"_blank",rel:"noopener noreferrer"},g=t("Github"),S=t("OXRS-SHA-StateController-ESP32-FW "),b={href:"https://github.com/SuperHouse/OXRS-SHA-StateController-ESP32-FW",target:"_blank",rel:"noopener noreferrer"},k=t("Github"),w=t("OXRS-SHA-StateMonitor-ESP32-FW "),E={href:"https://github.com/SuperHouse/OXRS-SHA-StateMonitor-ESP32-FW",target:"_blank",rel:"noopener noreferrer"},C=t("Github"),x=e("h2",{id:"supported-libraries",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#supported-libraries","aria-hidden":"true"},"#"),t(" Supported Libraries")],-1),P=t("OXRS-SHA-Rack32-ESP32-LIB "),v={href:"https://github.com/SuperHouse/OXRS-SHA-Rack32-ESP32-LIB",target:"_blank",rel:"noopener noreferrer"},O=t("Github"),R=e("h2",{id:"additional-resources",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#additional-resources","aria-hidden":"true"},"#"),t(" Additional Resources")],-1),y=t("More info "),A={href:"https://github.com/SuperHouse/RACK32",target:"_blank",rel:"noopener noreferrer"},H=t("Github"),D=e("h2",{id:"where-to-buy",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#where-to-buy","aria-hidden":"true"},"#"),t(" Where to Buy")],-1),I={href:"https://www.superhouse.tv/product/rack32-universal-rack-controller-board/",target:"_blank",rel:"noopener noreferrer"},L=t("SuperHouse Store"),F=e("h2",{id:"faqs",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#faqs","aria-hidden":"true"},"#"),t(" FAQs")],-1),B=e("details",{class:"custom-container details"},[e("summary",null,"Does it come with a power supply?"),e("p",null,"TODO - Jon to supply some FAQ's")],-1),V={class:"custom-container tip"},q=e("p",{class:"custom-container-title"},"Maker Info",-1),W=e("p",null,[e("strong",null,"Maker:"),t(" SuperHouse Automation")],-1),X=e("strong",null,"Link:",-1),N=t(),M={href:"https://www.superhouse.tv",target:"_blank",rel:"noopener noreferrer"},j=t("https://www.superhouse.tv"),T=e("h2",{id:"compatible-hardware",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#compatible-hardware","aria-hidden":"true"},"#"),t(" Compatible Hardware")],-1),G=t("Universal Input/Output (UIO) 16Port "),U=t("Link");function Y(K,J){const r=a("ExternalLinkIcon"),n=a("RouterLink");return s(),i(c,null,[_,e("ul",null,[e("li",null,[f,e("a",m,[g,o(r)])]),e("li",null,[S,e("a",b,[k,o(r)])]),e("li",null,[w,e("a",E,[C,o(r)])])]),x,e("ul",null,[e("li",null,[P,e("a",v,[O,o(r)])])]),R,e("ul",null,[e("li",null,[y,e("a",A,[H,o(r)])])]),D,e("ul",null,[e("li",null,[e("a",I,[L,o(r)])])]),F,B,e("div",V,[q,W,e("p",null,[X,N,e("a",M,[j,o(r)])])]),T,e("ul",null,[e("li",null,[G,o(n,{to:"/docs/hardware/input-output-devices/smoke-detector-sd-16port.html"},{default:l(()=>[U]),_:1})])])],64)}var Z=d(p,[["render",Y]]);export{Z as default};
